{"version":3,"sources":["webpack:///./src/pages/blog.js"],"names":["data","location","posts","allMarkdownRemark","edges","author","site","siteMetadata","images","allFile","nodes","map","node","frontmatter","defaultTitle","title","date","description","image","excerpt","slug","fields","toUpperCase","replace","substring","length","postImage","find","img","childImageSharp","fluid","originalName","Post","key","to","PostImage","alt","href","twitter","name","dangerouslySetInnerHTML","__html","styled","article","div","pageQuery"],"mappings":"oRAQe,sBAAyB,IAAtBA,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACdC,EAAQF,EAAKG,kBAAkBC,MAC7BC,EAAWL,EAAKM,KAAKC,aAArBF,OACFG,EAASR,EAAKS,QAAQC,MAE5B,OACI,kBAAC,IAAD,CAAQT,SAAUA,GACbC,EAAMS,KAAI,YAAe,IAAZC,EAAW,EAAXA,KAAW,EAUjBA,EARAC,YACWC,EAHM,EAGbC,MACAC,EAJa,EAIbA,KACAC,EALa,EAKbA,YACAC,EANa,EAMbA,MAEJC,EAEAP,EAFAO,QACUC,EACVR,EADAS,OAAUD,KAGRL,EACFD,GACAM,EAAK,GAAGE,cACJF,EACKG,QAAQ,KAAM,KACdA,QAAQ,MAAO,IACfC,UAAU,EAAGJ,EAAKK,OAAS,GAElCC,EAAYlB,EAAOmB,MACrB,SAAAC,GAAG,OAAIA,EAAIC,gBAAgBC,MAAMC,eAAiBb,KAEtD,OACI,kBAACc,EAAD,CAAMC,IAAKb,GACP,gCACI,kBAAC,OAAD,CAAMc,GAAE,QAAUd,GACd,kBAAC,IAAD,KAAKL,GACJW,GACG,kBAACS,EAAD,KACI,kBAAC,IAAD,CACIL,MACIJ,EAAUG,gBAAgBC,MAE9BM,IAAKrB,EACLA,MAAOA,MAKvB,+BACKC,GAAQ,8BAAOA,EAAP,KACT,8BACK,IADL,aAEe,IACX,kBAAC,IAAD,CAAcqB,KAAMhC,EAAOiC,SACtBjC,EAAOkC,MAJhB,OAUR,iCACI,uBACIC,wBAAyB,CACrBC,OAAQxB,GAAeE,YAW3D,IAAMa,EAAOU,IAAOC,QAAV,iEAAGD,CAAH,0BAIJP,EAAYO,IAAOE,IAAV,sEAAGF,CAAH,4BAIFG,EAAS","file":"component---src-pages-blog-js-750b9f74758cb7d7179b.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Link, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport Layout from '../components/layout';\nimport ExternalLink from '../components/Shared.ExternalLink';\nimport { H2 } from '../components/Shared.Headings';\n\nexport default ({ data, location }) => {\n    const posts = data.allMarkdownRemark.edges;\n    const { author } = data.site.siteMetadata;\n    const images = data.allFile.nodes;\n\n    return (\n        <Layout location={location}>\n            {posts.map(({ node }) => {\n                const {\n                    frontmatter: {\n                        title: defaultTitle,\n                        date,\n                        description,\n                        image\n                    },\n                    excerpt,\n                    fields: { slug }\n                } = node;\n\n                const title =\n                    defaultTitle ||\n                    slug[1].toUpperCase() +\n                        slug\n                            .replace(/-/g, ' ')\n                            .replace(/\\//g, '')\n                            .substring(1, slug.length - 1);\n\n                const postImage = images.find(\n                    img => img.childImageSharp.fluid.originalName === image\n                );\n                return (\n                    <Post key={slug}>\n                        <header>\n                            <Link to={`/blog${slug}`}>\n                                <H2>{title}</H2>\n                                {postImage && (\n                                    <PostImage>\n                                        <Img\n                                            fluid={\n                                                postImage.childImageSharp.fluid\n                                            }\n                                            alt={title}\n                                            title={title}\n                                        />\n                                    </PostImage>\n                                )}\n                            </Link>\n                            <small>\n                                {date && <span>{date}.</span>}\n                                <span>\n                                    {' '}\n                                    Written by{' '}\n                                    <ExternalLink href={author.twitter}>\n                                        {author.name}\n                                    </ExternalLink>\n                                    .\n                                </span>\n                            </small>\n                        </header>\n                        <section>\n                            <p\n                                dangerouslySetInnerHTML={{\n                                    __html: description || excerpt\n                                }}\n                            />\n                        </section>\n                    </Post>\n                );\n            })}\n        </Layout>\n    );\n};\n\nconst Post = styled.article`\n    padding-bottom: 1rem;\n`;\n\nconst PostImage = styled.div`\n    padding-bottom: 0.5rem;\n`;\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            siteMetadata {\n                author {\n                    name\n                    twitter\n                }\n            }\n        }\n        allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n            edges {\n                node {\n                    excerpt(pruneLength: 350)\n                    fields {\n                        slug\n                    }\n                    frontmatter {\n                        date(formatString: \"MMMM DD, YYYY\")\n                        title\n                        image\n                    }\n                }\n            }\n        }\n        allFile(filter: { relativePath: { regex: \"/blog-images/\" } }) {\n            nodes {\n                childImageSharp {\n                    fluid(maxWidth: 750, maxHeight: 300) {\n                        originalName\n                        ...GatsbyImageSharpFluid\n                    }\n                }\n            }\n        }\n    }\n`;\n"],"sourceRoot":""}