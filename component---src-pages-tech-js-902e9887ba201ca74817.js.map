{"version":3,"sources":["webpack:///./src/components/Tech.Circle.js","webpack:///./src/pages/tech.js","webpack:///./node_modules/core-js/modules/es6.string.link.js"],"names":["data","images","smallImages","itemCount","reversed","randomValue","useState","Math","random","window","innerWidth","smallScreen","setSmallScreen","useEffect","addEventListener","Container","ListCircle","items","map","item","index","ItemLink","key","name","href","link","title","ItemCircle","imageData","find","image","childImageSharp","fixed","originalName","ItemInnerShadow","ItemName","ItemImage","ItemInnerShadow2","getImage","styled","div","props","GROUP_CIRCLE_DIAMETER","ul","ExternalLink","li","theme","text","rotation","REDUCED_GROUP_CIRCLE_DIAMETER","attrs","className","ITEM_CIRCLE_DIAMETER","ITEM_CIRCLE_PADDING","REDUCED_ITEM_CIRCLE_DIAMETER","TECHNOLOGIES","imageNames","description","TechGroup","location","additionalTitleStyles","textAlign","additionalMainStyles","maxWidth","display","flexWrap","justifyContent","group","nodes","length","createHTML","url","this"],"mappings":"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","file":"component---src-pages-tech-js-902e9887ba201ca74817.js","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Img from 'gatsby-image';\nimport ExternalLink from './Shared.ExternalLink';\n\nconst BREAKPOINT = 550;\nconst SUPER_SMALL_BREAKPOINT = 350;\n\nconst getImage = function(images, item, reversed, randomValue) {\n    const imageData =\n        images &&\n        images.find(\n            image => image.childImageSharp.fixed.originalName === item.image\n        );\n\n    return (\n        <Fragment>\n            <ItemInnerShadow />\n            <ItemName reversed={reversed} randomValue={randomValue}>\n                {item.name}\n            </ItemName>\n            {imageData && imageData.childImageSharp && (\n                <ItemImage reversed={reversed} randomValue={randomValue}>\n                    <Img fixed={imageData.childImageSharp.fixed} />\n                </ItemImage>\n            )}\n            <ItemInnerShadow2 />\n        </Fragment>\n    );\n};\n\nexport default ({ data, images, smallImages, itemCount, reversed }) => {\n    const [randomValue] = useState(120 * Math.random());\n    const [smallScreen, setSmallScreen] = useState(\n        typeof window !== 'undefined' && window.innerWidth <= BREAKPOINT\n    );\n    useEffect(() => {\n        function handleResize() {\n            setSmallScreen(\n                typeof window !== 'undefined' && window.innerWidth <= BREAKPOINT\n            );\n        }\n        typeof window !== 'undefined' &&\n            window.addEventListener('resize', handleResize);\n    }, []);\n    return (\n        <Container reversed={reversed} randomValue={randomValue}>\n            <ListCircle>\n                {data.items.map((item, index) => (\n                    <ItemLink\n                        key={item.name}\n                        href={item.link}\n                        title={item.link}\n                    >\n                        <ItemCircle\n                            key={item.name}\n                            itemCount={itemCount}\n                            index={index}\n                        >\n                            {getImage(\n                                smallScreen ? smallImages : images,\n                                item,\n                                reversed,\n                                randomValue\n                            )}\n                        </ItemCircle>\n                    </ItemLink>\n                ))}\n            </ListCircle>\n        </Container>\n    );\n};\n\nconst GROUP_CIRCLE_BORDER = 5;\nconst GROUP_CIRCLE_DIAMETER = 375;\nconst REDUCED_GROUP_CIRCLE_DIAMETER = GROUP_CIRCLE_DIAMETER / 1.6;\n\nconst ITEM_CIRCLE_BORDER = 2;\nconst ITEM_CIRCLE_DIAMETER = 85;\nconst ITEM_CIRCLE_PADDING = 10;\nconst ITEM_INNER_SHADOW = 3;\nconst REDUCED_ITEM_CIRCLE_DIAMETER = 55;\n\nconst circleStyles = `\n    border-radius: 50%;\n`;\n\nconst Container = styled.div`\n    box-sizing: content-box;\n    padding-top: 3rem;\n    padding-bottom: 3rem;\n    margin: auto;\n    width: ${GROUP_CIRCLE_DIAMETER}px;\n    animation: ${props => `${60 + props.randomValue}s`}\n        ${props => props.reversed && 'anticlockwise-'}rotate-circle infinite\n        linear;\n\n    &:hover {\n        animation-play-state: paused;\n\n        .item-image {\n            animation-play-state: paused;\n        }\n\n        .item-name {\n            animation-play-state: paused;\n        }\n    }\n\n    @keyframes rotate-circle {\n        to {\n            transform: rotate(360deg);\n        }\n    }\n\n    @keyframes anticlockwise-rotate-circle {\n        to {\n            transform: rotate(-360deg);\n        }\n    }\n\n    @keyframes rotate-circle-item {\n        25% {\n            transform: rotate(-360deg);\n        }\n        50% {\n            transform: rotate(-450deg);\n        }\n        75% {\n            transform: rotate(-540deg);\n        }\n        100% {\n            transform: rotate(-630deg);\n        }\n    }\n\n    @keyframes anticlockwise-rotate-circle-item {\n        25% {\n            transform: rotate(-180deg);\n        }\n        50% {\n            transform: rotate(-90deg);\n        }\n        75% {\n            transform: rotate(0deg);\n        }\n        100% {\n            transform: rotate(90deg);\n        }\n    }\n\n    @media only screen and (max-width: ${BREAKPOINT}px) {\n        width: ${REDUCED_GROUP_CIRCLE_DIAMETER}px;\n    }\n\n    @media only screen and (max-width: ${SUPER_SMALL_BREAKPOINT}px) {\n        padding: 0;\n        padding-bottom: 2rem;\n        width: 100%;\n        animation: none;\n    }\n`;\n\nconst ListCircle = styled.ul`\n    ${circleStyles}\n    margin: 0;\n    width: 100%;\n    padding-top: 100%;\n    border: ${GROUP_CIRCLE_BORDER}px solid;\n    transform: rotate(-90deg);\n\n    @media only screen and (max-width: ${SUPER_SMALL_BREAKPOINT}px) {\n        width: 100%;\n        border: none;\n        padding: 0;\n        transform: none;\n        display: flex;\n        flex-wrap: wrap;\n        justify-content: center;\n    }\n`;\n\nconst ItemLink = styled(ExternalLink)`\n    color: inherit;\n`;\n\nconst ItemCircle = styled.li`\n    ${circleStyles}\n\n    position: absolute;\n    display: flex;\n    overflow: hidden;\n    list-style: none;\n    background: white;\n    width: ${ITEM_CIRCLE_DIAMETER}px;\n    height: ${ITEM_CIRCLE_DIAMETER}px;\n    padding: ${ITEM_CIRCLE_PADDING}px;\n    border: ${ITEM_CIRCLE_BORDER}px solid ${props => props.theme.text};\n    margin-top: calc(\n        -${GROUP_CIRCLE_DIAMETER + ITEM_CIRCLE_DIAMETER}px / 2 - ${ITEM_CIRCLE_PADDING}px\n    );\n    margin-left: calc(\n        ${GROUP_CIRCLE_DIAMETER - ITEM_CIRCLE_DIAMETER}px / 2 -\n            ${ITEM_CIRCLE_PADDING}px\n    );\n    transform: ${props => {\n        const rotation = (360 / props.itemCount) * props.index;\n        return `\n                rotate(${rotation}deg)\n                translate(${(GROUP_CIRCLE_DIAMETER + GROUP_CIRCLE_BORDER) /\n                    2}px) \n                rotate(-${rotation}deg)\n            `;\n    }};\n\n    @media only screen and (max-width: ${BREAKPOINT}px) {\n        width: ${REDUCED_ITEM_CIRCLE_DIAMETER}px;\n        height: ${REDUCED_ITEM_CIRCLE_DIAMETER}px;\n\n        margin-top: calc(\n            -${REDUCED_GROUP_CIRCLE_DIAMETER + REDUCED_ITEM_CIRCLE_DIAMETER}px /\n                2 - ${ITEM_CIRCLE_PADDING}px\n        );\n        margin-left: calc(\n            ${REDUCED_GROUP_CIRCLE_DIAMETER - REDUCED_ITEM_CIRCLE_DIAMETER}px /\n                2 - ${ITEM_CIRCLE_PADDING}px\n        );\n\n        transform: ${props => {\n            const rotation = (360 / props.itemCount) * props.index;\n            return `\n                rotate(${rotation}deg)\n                translate(${(REDUCED_GROUP_CIRCLE_DIAMETER +\n                    GROUP_CIRCLE_BORDER) /\n                    2}px) \n                rotate(-${rotation}deg)\n            `;\n        }};\n    }\n\n    @media only screen and (max-width: ${SUPER_SMALL_BREAKPOINT}px) {\n        margin: 0.3rem;\n        position: relative;\n        transform: none;\n    }\n`;\n\nconst ItemInnerShadow = styled.div.attrs({ className: 'item-shadow' })`\n    position: absolute;\n    border-radius: 50%;\n    z-index: 1;\n\n    &:hover {\n        & ~ .item-image {\n            opacity: 0;\n        }\n\n        & ~ .item-name {\n            opacity: 1;\n        }\n    }\n\n    width: ${ITEM_CIRCLE_DIAMETER +\n        ITEM_CIRCLE_PADDING * 2 +\n        ITEM_CIRCLE_BORDER * 2}px;\n    height: ${ITEM_CIRCLE_DIAMETER +\n        ITEM_CIRCLE_PADDING * 2 +\n        ITEM_CIRCLE_BORDER * 2}px;\n\n    margin-left: -${ITEM_CIRCLE_PADDING + ITEM_CIRCLE_BORDER}px;\n    margin-top: -${ITEM_CIRCLE_PADDING + ITEM_CIRCLE_BORDER}px;\n\n    box-shadow: 3px 0px 4px ${ITEM_INNER_SHADOW}px white inset,\n        -3px 0px 4px ${ITEM_INNER_SHADOW}px white inset;\n\n    @media only screen and (max-width: ${BREAKPOINT}px) {\n        width: ${REDUCED_ITEM_CIRCLE_DIAMETER +\n            ITEM_CIRCLE_PADDING * 2 +\n            ITEM_CIRCLE_BORDER * 2}px;\n        height: ${REDUCED_ITEM_CIRCLE_DIAMETER +\n            ITEM_CIRCLE_PADDING * 2 +\n            ITEM_CIRCLE_BORDER * 2}px;\n\n        margin-left: -${ITEM_CIRCLE_PADDING + ITEM_CIRCLE_BORDER}px;\n        margin-top: -${ITEM_CIRCLE_PADDING + ITEM_CIRCLE_BORDER}px;\n    }\n`;\n\nconst ItemInnerShadow2 = styled.div`\n    position: absolute;\n    border-radius: 50%;\n    pointer-events: none;\n    z-index: 1;\n\n    width: ${ITEM_CIRCLE_DIAMETER +\n        ITEM_CIRCLE_PADDING * 2 +\n        ITEM_CIRCLE_BORDER * 2}px;\n    height: ${ITEM_CIRCLE_DIAMETER +\n        ITEM_CIRCLE_PADDING * 2 +\n        ITEM_CIRCLE_BORDER * 2}px;\n\n    margin-left: -${ITEM_CIRCLE_PADDING + ITEM_CIRCLE_BORDER}px;\n    margin-top: -${ITEM_CIRCLE_PADDING + ITEM_CIRCLE_BORDER}px;\n\n    box-shadow: 3px 0px 4px ${ITEM_INNER_SHADOW}px white inset,\n        -3px 0px 4px ${ITEM_INNER_SHADOW}px white inset;\n\n    @media only screen and (max-width: ${BREAKPOINT}px) {\n        width: ${REDUCED_ITEM_CIRCLE_DIAMETER +\n            ITEM_CIRCLE_PADDING * 2 +\n            ITEM_CIRCLE_BORDER * 2}px;\n        height: ${REDUCED_ITEM_CIRCLE_DIAMETER +\n            ITEM_CIRCLE_PADDING * 2 +\n            ITEM_CIRCLE_BORDER * 2}px;\n\n        margin-left: -${ITEM_CIRCLE_PADDING + ITEM_CIRCLE_BORDER}px;\n        margin-top: -${ITEM_CIRCLE_PADDING + ITEM_CIRCLE_BORDER}px;\n    }\n`;\n\nconst ItemImage = styled.div.attrs({ className: 'item-image' })`\n    transform: rotate(-270deg);\n    transition: opacity 0.35s ease-in-out;\n    pointer-events: none;\n    background: transparent;\n    display: flex;\n    justify-content: center;\n    align-content: center;\n\n    animation: ${props => `${60 + props.randomValue}s`}\n        ${props => props.reversed && 'anticlockwise-'}rotate-circle-item\n        infinite linear;\n\n    @media only screen and (max-width: ${SUPER_SMALL_BREAKPOINT}px) {\n        transform: none;\n        animation: none;\n    }\n`;\n\nconst ItemName = styled.div.attrs({ className: 'item-name' })`\n    opacity: 0;\n    transition: opacity 0.35s ease-in-out;\n    pointer-events: none;\n    position: absolute;\n    font-size: 85%;\n    color: grey;\n    align-items: center;\n    transform: rotate(-270deg);\n    display: flex;\n    flex-shrink: 0;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n\n    animation: ${props => `${60 + props.randomValue}s`}\n        ${props => props.reversed && 'anticlockwise-'}rotate-circle-item\n        infinite linear;\n\n    width: ${ITEM_CIRCLE_DIAMETER + ITEM_CIRCLE_BORDER * 2}px;\n    height: ${ITEM_CIRCLE_DIAMETER + ITEM_CIRCLE_BORDER * 2}px;\n\n    margin-left: -${ITEM_CIRCLE_BORDER}px;\n    margin-top: -${ITEM_CIRCLE_BORDER}px;\n\n    @media only screen and (max-width: ${BREAKPOINT}px) {\n        font-size: 75%;\n        width: ${REDUCED_ITEM_CIRCLE_DIAMETER + ITEM_CIRCLE_BORDER * 2}px;\n        height: ${REDUCED_ITEM_CIRCLE_DIAMETER + ITEM_CIRCLE_BORDER * 2}px;\n\n        margin-left: -${ITEM_CIRCLE_BORDER}px;\n        margin-top: -${ITEM_CIRCLE_BORDER}px;\n    }\n\n    @media only screen and (max-width: ${SUPER_SMALL_BREAKPOINT}px) {\n        transform: none;\n        animation: none;\n    }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Layout from '../components/layout';\nimport Circle from '../components/Tech.Circle';\nimport { H2 } from '../components/Shared.Headings';\n\nconst BREAKPOINT = 600;\n\nconst TECHNOLOGIES = [\n    {\n        title: 'Frontend',\n        imageNames: 'frontendImages',\n        description: (\n            <p>\n                We like to design our frontend applications with React and use\n                the best libraries within its ecosystem to provide the most\n                awesome user experience.\n            </p>\n        ),\n        items: [\n            {\n                name: 'TypeScript',\n                image: 'typescript.png',\n                link: 'https://typescriptlang.org'\n            },\n            {\n                name: 'React',\n                image: 'react.png',\n                link: 'https://reactjs.org/'\n            },\n            {\n                name: 'Gatsby',\n                image: 'gatsby.png',\n                link: 'https://www.gatsbyjs.org/'\n            },\n            {\n                name: 'GraphQL',\n                image: 'graphql.png',\n                link: 'https://graphql.org/'\n            },\n            {\n                name: 'Redux',\n                image: 'redux.png',\n                link: 'https://redux.js.org/'\n            },\n            {\n                name: 'Styled Components',\n                image: 'styled-components.png',\n                link: 'https://styled-components.com/'\n            }\n        ]\n    },\n    {\n        title: 'Backend',\n        imageNames: 'backendImages',\n        description: (\n            <p>\n                When it comes to APIs, we love to go micro! Node provides a\n                great amount of flexibility for your backend.\n            </p>\n        ),\n        items: [\n            {\n                name: 'Node',\n                image: 'node.png',\n                link: 'https://nodejs.org/'\n            },\n            {\n                name: 'Apollo Server',\n                image: 'apollo.png',\n                link: 'https://www.apollographql.com/'\n            },\n            {\n                name: 'MongoDB',\n                image: 'mongodb.png',\n                link: 'https://www.mongodb.com/'\n            },\n            {\n                name: 'Django',\n                image: 'django.png',\n                link: 'https://www.djangoproject.com/'\n            },\n            {\n                name: 'Laravel',\n                image: 'laravel.png',\n                link: 'https://laravel.com/'\n            },\n            {\n                name: 'Postgres',\n                image: 'postgresql.png',\n                link: 'https://www.postgresql.org/'\n            }\n        ]\n    },\n    {\n        title: 'Cloud computing',\n        imageNames: 'cloudImages',\n        description: (\n            <p>\n                Want a cost-effective solution and not compromise on\n                scalability? AWS was made for you!\n            </p>\n        ),\n        items: [\n            {\n                name: 'API Gateway',\n                image: 'apigateway.png',\n                link: 'https://aws.amazon.com/api-gateway/'\n            },\n            {\n                name: 'Lambda',\n                image: 'lambda.png',\n                link: 'https://aws.amazon.com/lambda/'\n            },\n            {\n                name: 'DynamoDB',\n                image: 'dynamodb.png',\n                link: 'https://aws.amazon.com/dynamodb/'\n            },\n            {\n                name: 'EC2',\n                image: 'ec2.png',\n                link: 'https://aws.amazon.com/ec2/'\n            },\n            {\n                name: 'S3',\n                image: 's3.png',\n                link: 'https://aws.amazon.com/s3/'\n            }\n        ]\n    },\n    {\n        title: 'Pipeline',\n        imageNames: 'pipelineImages',\n        description: (\n            <p>\n                We help you build a pipeline for your continuous integration /\n                continuous deployment thanks to these tools.\n            </p>\n        ),\n        items: [\n            {\n                name: 'Cloud Formation',\n                image: 'cloudformation.png'\n            },\n            {\n                name: 'Jenkins',\n                image: 'jenkins.png'\n            },\n            {\n                name: 'GitLab CI',\n                image: 'gitlab.png'\n            },\n            {\n                name: 'GitHub Actions',\n                image: 'github-actions.png'\n            }\n        ]\n    }\n];\n\nexport default ({ location }) => {\n    const images = useStaticQuery(graphql`\n        query {\n            frontendImages: allFile(\n                filter: { relativePath: { regex: \"/tech/frontend/\" } }\n            ) {\n                nodes {\n                    childImageSharp {\n                        fixed(height: 85, width: 85) {\n                            originalName\n                            ...GatsbyImageSharpFixed\n                        }\n                    }\n                }\n            }\n            frontendImagesSmall: allFile(\n                filter: { relativePath: { regex: \"/tech/frontend/\" } }\n            ) {\n                nodes {\n                    childImageSharp {\n                        fixed(height: 55, width: 55) {\n                            originalName\n                            ...GatsbyImageSharpFixed\n                        }\n                    }\n                }\n            }\n            backendImages: allFile(\n                filter: { relativePath: { regex: \"/tech/backend/\" } }\n            ) {\n                nodes {\n                    childImageSharp {\n                        fixed(height: 85, width: 85) {\n                            originalName\n                            ...GatsbyImageSharpFixed\n                        }\n                    }\n                }\n            }\n            backendImagesSmall: allFile(\n                filter: { relativePath: { regex: \"/tech/backend/\" } }\n            ) {\n                nodes {\n                    childImageSharp {\n                        fixed(height: 55, width: 55) {\n                            originalName\n                            ...GatsbyImageSharpFixed\n                        }\n                    }\n                }\n            }\n            cloudImages: allFile(\n                filter: { relativePath: { regex: \"/tech/cloud/\" } }\n            ) {\n                nodes {\n                    childImageSharp {\n                        fixed(height: 85, width: 85) {\n                            originalName\n                            ...GatsbyImageSharpFixed\n                        }\n                    }\n                }\n            }\n            cloudImagesSmall: allFile(\n                filter: { relativePath: { regex: \"/tech/cloud/\" } }\n            ) {\n                nodes {\n                    childImageSharp {\n                        fixed(height: 55, width: 55) {\n                            originalName\n                            ...GatsbyImageSharpFixed\n                        }\n                    }\n                }\n            }\n            pipelineImages: allFile(\n                filter: { relativePath: { regex: \"/tech/pipeline/\" } }\n            ) {\n                nodes {\n                    childImageSharp {\n                        fixed(height: 85, width: 85) {\n                            originalName\n                            ...GatsbyImageSharpFixed\n                        }\n                    }\n                }\n            }\n            pipelineImagesSmall: allFile(\n                filter: { relativePath: { regex: \"/tech/pipeline/\" } }\n            ) {\n                nodes {\n                    childImageSharp {\n                        fixed(height: 55, width: 55) {\n                            originalName\n                            ...GatsbyImageSharpFixed\n                        }\n                    }\n                }\n            }\n        }\n    `);\n\n    return (\n        <Layout\n            location={location}\n            additionalTitleStyles={{\n                textAlign: 'center'\n            }}\n            additionalMainStyles={{\n                maxWidth: 1100,\n                display: 'flex',\n                flexWrap: 'wrap',\n                justifyContent: 'center'\n            }}\n        >\n            {TECHNOLOGIES.map((group, index) => (\n                <TechGroup key={group.title}>\n                    <H2>{group.title}</H2>\n                    {group.description}\n                    <Circle\n                        data={group}\n                        images={\n                            images[group.imageNames] &&\n                            images[group.imageNames].nodes\n                        }\n                        smallImages={\n                            images[`${group.imageNames}Small`] &&\n                            images[`${group.imageNames}Small`].nodes\n                        }\n                        itemCount={group.items.length}\n                        reversed={!!((index - 1) % 2 === 0)}\n                    />\n                </TechGroup>\n            ))}\n        </Layout>\n    );\n};\n\nconst TechGroup = styled.div`\n    max-width: 550px;\n    padding-left: 2rem;\n    padding-right: 2rem;\n    padding-top: 1rem;\n    padding-bottom: 1rem;\n    box-sizing: border-box;\n\n    @media only screen and (max-width: ${BREAKPOINT}px) {\n        width: 100%;\n        padding: 0;\n    }\n`;\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n"],"sourceRoot":""}